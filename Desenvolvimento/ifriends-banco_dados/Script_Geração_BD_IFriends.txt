CREATE SCHEMA producao;

BEGIN;


CREATE TABLE IF NOT EXISTS producao.categoria
(
    id_categoria bigserial NOT NULL,
    nome_categoria character varying(60) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT categoria_pkey PRIMARY KEY (id_categoria)
);

CREATE TABLE IF NOT EXISTS producao.curte_perg
(
    id_usuario bigint NOT NULL,
    id_pergunta bigint NOT NULL,
    id_curte_perg bigserial NOT NULL,
    CONSTRAINT curte_perg_pkey PRIMARY KEY (id_curte_perg)
);

CREATE TABLE IF NOT EXISTS producao.curte_resp
(
    id_usuario bigint NOT NULL,
    id_resposta bigint NOT NULL,
    id_curte_resp bigserial NOT NULL,
    CONSTRAINT curte_resp_pkey PRIMARY KEY (id_curte_resp)
);

CREATE TABLE IF NOT EXISTS producao.evento
(
    id_evento bigserial NOT NULL,
    nome_evento character varying(150) COLLATE pg_catalog."default" NOT NULL,
    local_encontro character varying(255) COLLATE pg_catalog."default",
    dt_evento date NOT NULL,
    dt_publicacao timestamp without time zone,
    desc_evento character varying(8000) COLLATE pg_catalog."default" NOT NULL,
    presencial boolean,
    link_img_evento character varying(255) COLLATE pg_catalog."default",
    id_usuario bigint NOT NULL,
    id_categoria bigint NOT NULL,
    CONSTRAINT evento_pkey PRIMARY KEY (id_evento)
);

CREATE TABLE IF NOT EXISTS producao.favorita_evento
(
    id_favorita_evento bigserial NOT NULL,
    id_usuario bigint NOT NULL,
    id_evento bigint NOT NULL,
    CONSTRAINT favorita_evento_pkey PRIMARY KEY (id_favorita_evento)
);

CREATE TABLE IF NOT EXISTS producao.pergunta
(
    id_pergunta bigserial NOT NULL,
    titulo_perg character varying(30) COLLATE pg_catalog."default" NOT NULL,
    texto_perg character varying(8000) COLLATE pg_catalog."default" NOT NULL,
    link_img_perg character varying(255) COLLATE pg_catalog."default",
    deletado boolean NOT NULL,
    respondida boolean NOT NULL,
    visualizacao integer,
    dt_perg timestamp without time zone,
    dt_alt_perg timestamp without time zone,
    id_usuario bigint NOT NULL,
    id_categoria bigint NOT NULL,
    CONSTRAINT pergunta_pkey PRIMARY KEY (id_pergunta)
);

CREATE TABLE IF NOT EXISTS producao.recebe_titulo
(	
    id_recebe_titulo bigserial NOT NULL,
    id_usuario bigint NOT NULL,
    id_titulo bigint NOT NULL,
    utiliza boolean,
    CONSTRAINT recebe_titulo_pkey PRIMARY KEY (id_recebe_titulo)
);

CREATE TABLE IF NOT EXISTS producao.resposta
(
    id_resposta bigserial NOT NULL,
    texto_resp character varying(800) COLLATE pg_catalog."default",
    link_img_resp character varying(255) COLLATE pg_catalog."default",
    deletado boolean NOT NULL,
    aceita boolean NOT NULL,
    dt_resp timestamp without time zone,
    dt_alt_resp timestamp without time zone,
    id_pergunta integer NOT NULL,
    id_usuario integer NOT NULL,
    CONSTRAINT resposta_pkey PRIMARY KEY (id_resposta)
);

CREATE TABLE IF NOT EXISTS producao.tag
(
    id_tag bigserial NOT NULL,
    nome_tag character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tag_pkey PRIMARY KEY (id_tag)
);

CREATE TABLE IF NOT EXISTS producao.tag_evento
(	
    id_tag_evento bigint NOT NULL,
    id_tag bigint NOT NULL,
    id_evento bigint NOT NULL,
    CONSTRAINT tag_evento_pkey PRIMARY KEY (id_tag_evento)
);

CREATE TABLE IF NOT EXISTS producao.tag_perg
(
    id_tag bigint NOT NULL,
    id_pergunta bigint NOT NULL,
    id_tag_perg bigserial NOT NULL,
    CONSTRAINT tag_perg_pkey PRIMARY KEY (id_tag_perg)
);

CREATE TABLE IF NOT EXISTS producao.titulo
(
    id_titulo bigserial NOT NULL,
    nome_titulo character varying(60) COLLATE pg_catalog."default" NOT NULL,
    reputacao integer NOT NULL,
    CONSTRAINT titulo_pkey PRIMARY KEY (id_titulo)
);

CREATE TABLE IF NOT EXISTS producao.usuario
(
    id_usuario bigserial NOT NULL,
    nome_usuario character varying(150) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    senha character varying(255) COLLATE pg_catalog."default" NOT NULL,
    link_img_usuario character varying(255) COLLATE pg_catalog."default",
    curso character varying(20) COLLATE pg_catalog."default",
    ano smallint,
    reputacao_total integer,
    CONSTRAINT usuario_pkey PRIMARY KEY (id_usuario)
);

ALTER TABLE IF EXISTS producao.curte_perg
    ADD CONSTRAINT curte_perg_id_pergunta_fkey FOREIGN KEY (id_pergunta)
    REFERENCES producao.pergunta (id_pergunta) MATCH SIMPLE
	ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS producao.curte_perg
    ADD CONSTRAINT curte_perg_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES producao.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS producao.curte_resp
    ADD CONSTRAINT curte_resp_id_resposta_fkey FOREIGN KEY (id_resposta)
    REFERENCES producao.resposta (id_resposta) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS producao.curte_resp
    ADD CONSTRAINT curte_resp_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES producao.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS producao.evento
    ADD CONSTRAINT evento_id_categoria_fkey FOREIGN KEY (id_categoria)
    REFERENCES producao.categoria (id_categoria) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS producao.evento
    ADD CONSTRAINT evento_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES producao.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS producao.favorita_evento
    ADD CONSTRAINT favorita_evento_id_evento_fkey FOREIGN KEY (id_evento)
    REFERENCES producao.evento (id_evento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS producao.favorita_evento
    ADD CONSTRAINT favorita_evento_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES producao.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS producao.pergunta
    ADD CONSTRAINT pergunta_id_categoria_fkey FOREIGN KEY (id_categoria)
    REFERENCES producao.categoria (id_categoria) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS producao.pergunta
    ADD CONSTRAINT pergunta_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES producao.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS producao.recebe_titulo
    ADD CONSTRAINT recebe_titulo_id_titulo_fkey FOREIGN KEY (id_titulo)
    REFERENCES producao.titulo (id_titulo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS producao.recebe_titulo
    ADD CONSTRAINT recebe_titulo_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES producao.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS producao.resposta
    ADD CONSTRAINT resposta_id_pergunta_fkey FOREIGN KEY (id_pergunta)
    REFERENCES producao.pergunta (id_pergunta) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS producao.resposta
    ADD CONSTRAINT resposta_id_usuario_fkey FOREIGN KEY (id_usuario)
    REFERENCES producao.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS producao.tag_evento
    ADD CONSTRAINT tag_evento_id_evento_fkey FOREIGN KEY (id_evento)
    REFERENCES producao.evento (id_evento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS producao.tag_evento
    ADD CONSTRAINT tag_evento_id_tag_fkey FOREIGN KEY (id_tag)
    REFERENCES producao.tag (id_tag) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS producao.tag_perg
    ADD CONSTRAINT tag_perg_id_pergunta_fkey FOREIGN KEY (id_pergunta)
    REFERENCES producao.pergunta (id_pergunta) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS producao.tag_perg
    ADD CONSTRAINT tag_perg_id_tag_fkey FOREIGN KEY (id_tag)
    REFERENCES producao.tag (id_tag) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;

INSERT INTO 
	producao.Categoria(nome_categoria)
VALUES
	('Matemática'),
	('Ciências Humanas'),
	('Linguagens'),
	('Ciências da Natureza'),
	('Informática'),
	('Mecânica'),
	('Eletrônica');

